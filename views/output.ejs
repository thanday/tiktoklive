<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=MV+Waheed&display=swap" rel="stylesheet">

    <title>Live Output</title>
    <script src="/socket.io/socket.io.js"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            background: rgba(0, 0, 0, 0);
            overflow: hidden;
        }

        /* 9:16 Container */
        .container {
            position: relative;
            width: 608px;
            height: 1080px;
            background: rgba(0, 0, 0, 0);
            overflow: hidden;
        }

        .top-overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 15%;
            background: linear-gradient(to bottom, #9C27B0, rgba(0, 0, 0, 0));
            overflow: hidden;
            z-index: 1;
        }

        .top-overlay::before {
            content: "";
            position: absolute;
            top: 0;
            left: 0;
            width: 200%;
            height: 200%;
            background: radial-gradient(circle, rgba(0, 188, 212, 0.5), transparent 70%);
            border-radius: 50%;
            animation: wave-motion 6s linear infinite;
            opacity: 0.6;
        }

        @keyframes wave-motion {
            0% {
                transform: translateX(0) translateY(-30%) scaleY(0.6);
            }

            50% {
                transform: translateX(-50%) translateY(-20%) scaleY(0.7);
            }

            100% {
                transform: translateX(-100%) translateY(-30%) scaleY(0.6);
            }
        }

        /* Bottom Overlay Animation */
        .bottom-overlay {
            position: absolute;
            bottom: 0;
            left: 0;
            width: 100%;
            height: 15%;
            background: linear-gradient(to top, #00BCD4, rgba(0, 0, 0, 0));
            z-index: 1;
        }

        /* Top Logo */
        .top-logo {
            position: absolute;
            top: 7%;
            left: 50%;
            transform: translateX(-50%);
            width: 120px;
            z-index: 10;
        }

        /* Question Bar */
        #question {
            position: absolute;
            top: 19%;
            left: 15%;
            transform: translateX(-50%);
            width: 70%;
            height: 60px;
            font-size: 1.4rem;
            font-weight: bold;
            color: white;
            padding: 4px 8px;
            border-radius: 10px;
            text-align: center;
            display: flex;
            align-items: center;
            justify-content: center;
            word-wrap: break-word;
            overflow: hidden;
            background: linear-gradient(to right, #00BCD4, #9C27B0);
            box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.3);
            z-index: 10;
            display: none;
        }

        #sponsor-image {
            display: none;
            position: absolute;
            bottom: 10%;
            left: 50%;
            transform: translateX(-50%);
            width: 200px;
            height: 150px;
            align-items: center;
            justify-content: center;
        }

        #sponsor-image img {
            max-width: 100%;
            max-height: 100%;
            object-fit: contain;
        }


        #question.show-blast {
            animation: blast-effect 1s ease-out forwards;
            display: block;
        }

        /* Answer Bar */
        #answer {
            position: absolute;
            top: 25%;
            left: 15%;
            transform: translateX(-50%);
            width: 70%;
            font-size: 1.5rem;
            font-weight: bold;
            text-align: center;
            color: white;
            background: linear-gradient(to right, #FF0050, #00F2EA);
            padding: 15px;
            border-radius: 10px;
            box-shadow: 0px 8px 20px rgba(0, 0, 0, 0.5);
            display: none;
        }

        @keyframes blast-effect {
            0% {
                transform: scale(0.2) rotate(-10deg);
                opacity: 0;
            }

            70% {
                transform: scale(1.2) rotate(5deg);
                opacity: 1;
            }

            100% {
                transform: scale(1) rotate(0deg);
                opacity: 1;
            }
        }

        #answer.show-blast {
            animation: blast-effect 1s ease-out forwards;
            display: block;
        }

        /* Bottom Right Logo */
        .bottom-logo {
            position: absolute;
            bottom: 8%;
            right: 12%;
            width: 80px;
            z-index: 10;
        }

        /* Emoji question */


        #emoji-question {
            position: absolute;
            top: 22%;
            left: 50%;
            transform: translateX(-50%);
            display: flex;
            gap: 0.5rem;
            justify-content: center;
            z-index: 15;
            display: none;
        }

        .emoji-box {
            --blur: 1.75rem;
            --box-blur: calc(0.5 * var(--blur));
            --glow: var(--color);
            --size: 4.5rem;

            align-items: center;
            border-radius: 12px;
            border: 4px solid currentColor;
            box-shadow: inset 0 0 var(--box-blur) var(--glow), 0 0 var(--box-blur) var(--glow);
            color: var(--color, white);
            display: flex;
            justify-content: center;
            font-size: 3rem;
            height: var(--size);
            width: var(--size);
            text-shadow: 0 0 var(--blur) var(--glow);
            background: rgba(255, 255, 255, 0.1);
        }
    </style>
</head>

<body>
    <div class="container">
        <!-- Top Overlay Animation -->
        <div class="top-overlay"></div>

        <!-- Bottom Overlay Animation -->
        <div class="bottom-overlay"></div>

        <!-- Top Logo -->
        <img src="/images/top-logo.png" alt="Top Logo" class="top-logo">

        <!-- Question Text -->
        <div id="question"></div>

        <!-- Emoji Question -->
        <div id="emoji-question"> </div>

        <!-- Answer Text -->
        <div id="answer"></div>

        <!-- Sponsor Image Display Area -->
        <div id="sponsor-image" style="display: none;"></div>


        <!-- Bottom Right Logo -->
        <img src="/images/bottom-logo.png" alt="Bottom Logo" class="bottom-logo">
    </div>

    <script>
        const socket = io();


        // Handle both text and emoji questions
        socket.on('show-question', (data) => {
            const questionElement = document.getElementById('question');
            const emojiContainer = document.getElementById('emoji-question');
            const answerElement = document.getElementById('answer');


            // Reset styles and clear containers
            questionElement.style.display = 'none';
            emojiContainer.style.display = 'none';
            answerElement.style.top = '25%'; 
            emojiContainer.innerHTML = ''; 

            if (data.type === 'emoji') {
                if (Array.isArray(data.emojis)) {
                    data.emojis.forEach((emoji, index) => {
                        const emojiBox = document.createElement('div');
                        emojiBox.className = 'emoji-box';
                        emojiBox.style.setProperty('--color', getGlowColor(index)); 
                        emojiBox.innerHTML = `<div class="symbol">${emoji}</div>`; 
                        emojiContainer.appendChild(emojiBox);
                    });

                    emojiContainer.style.display = 'flex'; 
                    answerElement.style.top = '30%'; 
                    console.log('Displayed Emoji Question:', data.emojis);

                } else {
                    console.error('Expected data.emojis to be an array, but received:', data.emojis);
                }
            } else {
                // Handle text question
                questionElement.textContent = data.content;
                questionElement.style.display = 'block';
                questionElement.classList.add('show-blast');
                console.log('Displayed Text Question:', data.content);
            }
        });


        // Show the answer
        socket.on('show-answer', (data) => {
            const answerElement = document.getElementById('answer');
            answerElement.textContent = data.answer;

            // Reset animation state
            answerElement.style.display = 'none';
            answerElement.classList.remove('show-blast');
            void answerElement.offsetWidth; 
            // Show with animation
            answerElement.style.display = 'block';
            answerElement.classList.add('show-blast');
        });


        // Clear the screen
        socket.on('clear-screen', () => {
            const questionElement = document.getElementById('question');
            const emojiContainer = document.getElementById('emoji-question'); 
            const answerElement = document.getElementById('answer');

            // Hide all elements
            if (questionElement) questionElement.style.display = 'none';
            if (emojiContainer) {
                emojiContainer.style.display = 'none';
                emojiContainer.innerHTML = ''; 
            }
            if (answerElement) answerElement.style.display = 'none';

            console.log('Screen cleared successfully');
        });

        function getGlowColor(index) {
            const colors = ['#FCEAAC', '#025AFDFF', '#E555C7', '#B7E7F7', '#EB710DFF', '#00FF00', '#8A0AAAFF'];
            return colors[index % colors.length];
        }


        socket.on('display-sponsor', (data) => {
            const sponsorImageDiv = document.getElementById('sponsor-image');
            sponsorImageDiv.innerHTML = `<img src="${data.imageUrl}" alt="Sponsor Image" style="max-width: 100%; max-height: 100%; object-fit: contain;">`;
            sponsorImageDiv.style.display = 'block'; 
        });

        socket.on('clear-sponsor', () => {
            const sponsorImageDiv = document.getElementById('sponsor-image');
            sponsorImageDiv.innerHTML = ''; // Clear any content
            sponsorImageDiv.style.display = 'none'; // Hide the sponsor image area
        });



    </script>
</body>

</html>