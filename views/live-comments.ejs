<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Live Comments & Gifts</title>
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
  <style>
    body {
      display: flex;
      justify-content: center;
      align-items: center;
      min-height: 100vh;
      background-color: #1a202c;
    }

    .container {
      width: 90%;
      height: 90%;
      display: flex;
      flex-direction: column;
      gap: 2rem;
    }

    .section {
      flex: 1;
      background-color: #2d3748;
      border-radius: 0.5rem;
      overflow-y: auto;
      padding: 1rem;
    }

    .section h2 {
      font-size: 2rem;
      color: #f7fafc;
      margin-bottom: 1rem;
    }

    .content {
      font-size: 1.5rem;
      line-height: 2rem;
      color: #edf2f7;
    }

    .not-live {
      font-size: 2rem;
      color: #e53e3e;
      text-align: center;
      margin-top: 2rem;
    }
  </style>
  <script src="/socket.io/socket.io.js"></script>
</head>
<body>
  <div class="container" id="main-container">
    <div id="not-live-message" class="not-live hidden">
      The user is not currently live.
    </div>

    <div id="live-sections" class="hidden">
      <!-- Comments Section -->
      <div class="section">
        <h2>Comments</h2>
        <div id="comments" class="content"></div>
      </div>

      <!-- Gifts Section -->
      <div class="section">
        <h2>Gifts</h2>
        <div id="gifts" class="content"></div>
      </div>
    </div>
  </div>

  <script>
    const socket = io();
    const notLiveMessage = document.getElementById('not-live-message');
    const liveSections = document.getElementById('live-sections');
    const commentContainer = document.getElementById('comments');
    const giftContainer = document.getElementById('gifts');

    socket.on('not-live', (data) => {
      notLiveMessage.textContent = data.message;
      notLiveMessage.classList.remove('hidden');
      liveSections.classList.add('hidden');
    });

    socket.on('tiktok-chat', (data) => {
      notLiveMessage.classList.add('hidden');
      liveSections.classList.remove('hidden');

      const commentEl = document.createElement('div');
      commentEl.textContent = `${data.uniqueId}: ${data.comment}`;
      commentEl.className = "mb-2 border-b border-gray-600 pb-1";
      commentContainer.prepend(commentEl);
    });

    socket.on('tiktok-gift', (data) => {
      notLiveMessage.classList.add('hidden');
      liveSections.classList.remove('hidden');

      const giftEl = document.createElement('div');
      giftEl.textContent = `${data.uniqueId} sent ${data.giftName} x${data.repeatCount}`;
      giftEl.className = "mb-2 border-b border-yellow-500 pb-1";
      giftContainer.prepend(giftEl);
    });
  </script>
</body>
</html>
